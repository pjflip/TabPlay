<!DOCTYPE html>
<html lang="en">

<!-- TabPlay - a tablet-based system for playing bridge.   Copyright(C) 2020 by Peter Flippant
Licensed under the Apache License, Version 2.0; you may not use this file except in compliance with the License -->

<head>
    <title>@ViewData["Title"].ToString()</title>
    <link rel="shortcut icon" href='@Url.Content("~/favicon.ico")'>
    <meta name="viewport" content="width=device-width, user-scalable=no">
    <script src='@Url.Content("~/Scripts/jquery-3.5.1.min.js")'></script>
    <script src='@Url.Content("~/Scripts/bootstrap.min.js")'></script>
    <link href='@Url.Content("~/Content/bootstrap.min.css")' rel="stylesheet" />
    <script src='@Url.Content("~/Content/font-awesome/all.min.js")'></script>
    <link href='@Url.Content("~/Content/font-awesome/all.min.css")' rel="stylesheet" />
    <script>
        $(function () {
            $("body").css("padding-top", $("#headerRow").height().toString() + "px");
            if ("getBattery" in navigator) {
                navigator.getBattery().then(function (battery) {
                    $("#battery").css("display", "inline");
                    var batteryLevel = battery.level * 100;
                    if (batteryLevel > 87.5) {
                        $("#bl").attr("class", "fa fa-battery-full");
                    }
                    else if (batteryLevel > 62.5) {
                        $("#bl").attr("class", "fa fa-battery-three-quarters");
                    }
                    else if (batteryLevel > 37.5) {
                        $("#bl").attr("class", "fa fa-battery-half");
                    }
                    else if (batteryLevel > 12.5) {
                        $("#bl").attr("class", "fa fa-battery-quarter");
                    }
                    else {
                        $("#bl").attr("class", "fa fa-battery-empty");
                    }
                });
            }
        });
    </script>
</head>

<body style="background-color: mediumseagreen">
    <div id="headerRow" class="container-fluid fixed-top" style="background-color: bisque; border-bottom-style: solid; min-height: 70px">
        <div class="row my-2">
            <div id="header" class="col-12 my-auto">
                <h3 id="battery" class="ml-2 my-2" style="display: none"><span id="bl"></span></h3>
                <h4 class="ml-2 my-2" style="display: inline">@Html.Raw(ViewData["Header"])</h4>
                @if ((TabPlay.Models.ButtonOptions)ViewData["Buttons"] == TabPlay.Models.ButtonOptions.OKEnabled)
                {
                    <button id="OKButton" class="btn btn-success mr-0 ml-2 float-right" ontouchstart="OKButtonClick()">
                        <h4>OK <span class="far fa-check-square"></span></h4>
                    </button>
                }
                @if ((TabPlay.Models.ButtonOptions)ViewData["Buttons"] == TabPlay.Models.ButtonOptions.OKDisabled)
                {
                    <button id="OKButton" class="btn btn-success mr-0 ml-2 float-right" disabled>
                        <h4>OK <span class="far fa-check-square"></span></h4>
                    </button>
                }
                @if ((TabPlay.Models.ButtonOptions)ViewData["Buttons"] == TabPlay.Models.ButtonOptions.Skip)
                {
                    <button id="skipButton" class="btn btn-warning mr-0 ml-2 float-right" style="font-size: 1.5rem" ontouchstart="SkipButtonClick()">
                        <h4>Skip Board <span class="fas fa-external-link-alt"></span></h4>
                    </button>
                }
                @if ((TabPlay.Models.ButtonOptions)ViewData["Buttons"] == TabPlay.Models.ButtonOptions.HandsAndOK)
                {
                    <button id="handsButton" class="btn btn-info mr-0 ml-2 float-right" ontouchstart="handsButtonClick()">
                        <h4>Hands <span class="far fa-hand-paper"></span></h4>
                    </button>
                    <button id="OKButton" class="btn btn-success mr-0 ml-2 float-right" ontouchstart="OKButtonClick()">
                        <h4>OK <span class="far fa-check-square"></span></h4>
                    </button>
                }
                @if ((TabPlay.Models.ButtonOptions)ViewData["Buttons"] == TabPlay.Models.ButtonOptions.Claim)
                {
                    <button id="claimButton" class="btn btn-warning mr-0 ml-2 float-right" ontouchstart="claimButtonClick()">
                        <h4>Claim <span class="far fa-handshake"></span></h4>
                    </button>
                }
            </div>
        </div>
    </div>

    <div class="container-fluid">
        @RenderBody()
    </div>
</body>

</html>